// <auto-generated />
using Garrison.Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Garrison.Lib.Migrations
{
    [DbContext(typeof(GarrisonContext))]
    [Migration("20250124105747_AddUserAndCharacter")]
    partial class AddUserAndCharacter
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Garrison.Lib.Models.Character", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<string>("FoundryId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("char(16)")
                        .HasColumnName("foundry_id")
                        .IsFixedLength()
                        .UseCollation("utf8mb4_0900_as_cs")
                        .HasAnnotation("MySQL:Charset", "utf8mb4")
                        .HasAnnotation("MySQL:Collation", "utf8mb4_0900_as_cs");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<uint>("OwnerId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("owner_id");

                    b.HasKey("Id")
                        .HasName("pk_character");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_character_owner_id");

                    b.ToTable("character", (string)null);
                });

            modelBuilder.Entity("Garrison.Lib.Models.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("user_name")
                        .UseCollation("utf8mb4_0900_ai_ci")
                        .HasAnnotation("MySQL:Charset", "utf8mb4")
                        .HasAnnotation("MySQL:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("ix_user_user_name");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Garrison.Lib.Models.Character", b =>
                {
                    b.HasOne("Garrison.Lib.Models.User", "Owner")
                        .WithMany("Characters")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_character_user_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Garrison.Lib.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
